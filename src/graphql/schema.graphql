type Query {
    post(id: ID!): [Post]!
    posts: [Post]!
    user(id: ID!): [User]!
    users: [User]! 
}

type Mutation {
    addPost(dto: CreatePostInput): Post
    updatePost(id: ID!, dto: UpdatePostInput): Post
    removePost(id: ID!): ID
    addUser(dto: CreateUserInput): User
    updateUser(id: ID!, dto: UpdateUserInput): User
    removeUser(id: ID!): ID
    login(dto: LoginInput): AuthResponse
}

type Post {
    id: ID!
    content: String!
    location: String!
    privacy: String!
}

type User {
    id: ID!
    name: String!
    username: String!
    biography: String
    location: String
    website: String
    birthdate: String!
    photo: String
    background: String
}

type AuthResponse {
    token: String
    username: String
}

input CreatePostInput {
    content: String!
    location: String!
    privacy: String!
}

input UpdatePostInput {
    content: String
    location: String
    privacy: String
}

input CreateUserInput {
    username: String!
    name: String!
    birthdate: String!
    biography: String
    location: String
    website: String
    photo: String
    background: String
}

input UpdateUserInput {
    username: String
    name: String
    birthdate: String
    biography: String
    location: String
    website: String
    photo: String
    background: String
}

input LoginInput {
    username: String!
    password: String!
}